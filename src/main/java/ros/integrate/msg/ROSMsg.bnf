{
  parserClass="ros.integrate.msg.parser.ROSPktParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="ROSPkt"
  psiImplClassSuffix="Impl"
  psiPackage="ros.integrate.msg.psi"
  psiImplPackage="ros.integrate.msg.psi.impl"

  elementTypeHolderClass="ros.integrate.msg.psi.ROSPktTypes"
  elementTypeClass="ros.integrate.msg.psi.ROSPktElementType"
  tokenTypeClass="ros.integrate.msg.psi.ROSPktTokenType"

  psiImplUtilClass="ros.integrate.msg.psi.impl.ROSPktPsiImplUtil"
}

rosMsgFile ::= item_*

private item_ ::= (separator|field|comment|CRLF/*|fragment*/)

comment ::= LINE_COMMENT {
    methods=[getAnnotationIds]
}

private type_ ::= (CUSTOM_TYPE|KEYTYPE)

separator ::= SERVICE_SEPARATOR

const ::= (NEG_OPERATOR? NUMBER | STRING) {
    methods=[getBestFit]
}

type ::= type_ (LBRACKET NUMBER? RBRACKET)? {
    mixin="ros.integrate.msg.psi.impl.ROSPktIdentifierImpl"
    implements="ros.integrate.msg.psi.ROSPktIdentifier"
    methods=[raw custom size removeArray set getName getNameIdentifier getReference getReferences]
}

label ::= NAME {
    mixin="ros.integrate.msg.psi.impl.ROSPktIdentifierImpl"
    implements="ros.integrate.msg.psi.ROSPktIdentifier"
    methods=[set getName]
}

field ::= type label (CONST_ASSIGNER const)? {
    methods=[getPresentation isLegalConstant]
}

//fragment ::= type? fieldName? CONST_ASSIGNER? const?