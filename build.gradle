buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.3.4'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.jetbrains.intellij'

sourceCompatibility = 1.8

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.12'
}

intellij {
    version '183.3647.12'
    updateSinceUntilBuild false
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/main/gen'
        }
    }
}

patchPluginXml {
    version '0.1.1'
    changeNotes """
        <p>0.2</p>
            <li>added support for *.action files - equipped with all inspections for ROS messages and with its own file icon</li>
        <p>0.1.1</p>
        <ul>
            <li>renamed the ROSMsg language to ROSPkt - short for ROS Packet</li>
            <li>added support for *.srv files - equipped with all inspections for ROS messages and with its own file icon</li>
        </ul>
        <p>0.1</p>
        <ul>
            <li>Added the ROSMsg language - a language for ROS Messages</li>
            <li>ROSMsg has its own highlighting which can be customised</li>
            <li>*.msg has its own file icon (will be extended to *.srv in due time)</li>
            <li>ROSMsg contains a commenter (default: Ctrl+/ like all other commentators)</li>
            <li>Basic refactoring support for field names</li>
            <li>Refactoring support for msg types</li>
            <li>Jump-to-definition action by Ctrl clicking on the field type</li>
            <li>ROSMsg Autocompletion:
                <ul>
                    <li>non-numerical key-types: string, time, duration appear when writing a field type</li>
                    <li>Header std_msg type appears as well</li>
                    <li>numerical key-types: float, uint, int appear without their data size.<br/>
                        When selected, a data-size auto-completion list is shown and a default is auto-written
                    </li>
                    <li>IDE will search for other message types defined in-project, and will display them</li>
                    <li>when writing a field name, IDE will use its respective type to suggest a variety of possible names</li>
                    <li>Support for bracket completion</li>
                </ul>
            </li>
            <li>ROSMsg Annotation:
                <ul>
                    <li>added check for service separators, raises error if there are too many (1 or more)</li>
                    <li>added check for in-package custom field types,
                        raises errors if IDE could not find needed message file in project
                    </li>
                    <li>added check for custom-types, raises error if the message uses itself (recursion is not allowed!)</li>
                    <li>added another check for custom-types, raises error if they use illegal characters</li>
                    <li>added check for header fields, raises error if "Header" is found as a field type but not as the first one</li>
                    <li>added check for constants, raises error if it finds an array with a constant</li>
                    <li>added another check for constants, raises error if a custom-type, time, or duration have a constant</li>
                    <li>added yet another check for constants, raises error if the field type cannot handle the provided constant</li>
                    <li>added check for field names, raises error is a certain field name is used twice in a message</li>
                    <li>added another check for field names, raises error if the name uses illegal characters</li>
                    <li>added inspection which checks that field types are written in CamelCase</li>
                </ul>
            </li>
            <li>ROSMsg Intention and Fixes:
                <ul>
                    <li>message-is-not-defined can be fixed by adding a new message file. This intention has its own dialog</li>
                    <li>header-not-first-field can be fixed by adding a prefix to the type</li>
                    <li>type-cannot-handle-const and illegal-const-type can be fixed by changing the keytype accordingly</li>
                    <li>too-many-service-separators can be fixed by either removing that specific separator, or all of them if more than one are present</li>
                    <li>array-with-constant can be fixed by removing the array part</li>
                    <li>array-with-constant and illegal-const-type can be fixed by removing the constant</li>
                    <li>self-containing-message can be fixed by removing the field</li>
                    <li>duplicate-name and illegal-field-name can be fixed by renaming the field</li>
                    <li>illegal-field-type can be fixed by renaming the type</li>
                    <li>not-camel-field-type can be fixed by renaming the type</li>
                    <li>named fields and comments have a spellchecker running</li>
                </ul>
            </li>
        </ul>
    """

}

publishPlugin {
    username intellijPublishUsername
    password intellijPublishPassword
}

group 'ros-integrate'
version '0.1.1'